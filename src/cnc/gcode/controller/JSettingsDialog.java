/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package cnc.gcode.controller;

import java.awt.GridLayout;
import java.util.LinkedList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author n.rambaud
 */
//javax.swing.JFrame
public final class JSettingsDialog extends JDialog{
    JTextField[] valuesFields;
    LinkedList<ISettingFeedback> feedbackValues  = null;
    ISettingsFeedback iftSettings = null;
    /**
     * Creates new form JSettingsChange
     */
    
    public JSettingsDialog() {
        super();
        super.setTitle("Main JFrame");
        super.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        setResizable(false);
        initComponents();
    }

    public JSettingsDialog(ISettingsFeedback settingsItf, LinkedList<ISettingFeedback> feedbackValues)
    {
        this();
        iftSettings = settingsItf;
        this.feedbackValues = feedbackValues;
        configureDataToDisplay( feedbackValues);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JSettingsPanel = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        JOkButton = new javax.swing.JButton();
        JCancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        javax.swing.GroupLayout JSettingsPanelLayout = new javax.swing.GroupLayout(JSettingsPanel);
        JSettingsPanel.setLayout(JSettingsPanelLayout);
        JSettingsPanelLayout.setHorizontalGroup(
            JSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        JSettingsPanelLayout.setVerticalGroup(
            JSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );

        JOkButton.setText("OK");
        JOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JOkButtonActionPerformed(evt);
            }
        });

        JCancelButton.setLabel("Cancel");
        JCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(JCancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JOkButton)
                    .addComponent(JCancelButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JSettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JSettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ValidateNewValue(ISettingFeedback data)
    {
        double val = data.getSettingValue();
        if(val < data.getSettingMinValue())
        {
            int answer = JOptionPane.showConfirmDialog(null,
                                                        "Setting: " + data.getSettingId().toString() + " is invalid. min value:" + data.getSettingMinValue() + "\nDo you want to adjust this value to min value?." ,
                                                        "Invalid setting",
                                                         JOptionPane.YES_NO_OPTION);
            if(answer == JOptionPane.YES_OPTION)
            {
               data.setSettingValue(data.getSettingMinValue());
            }
        }
        else if(val > data.getSettingMaxValue())
        {
            int answer = JOptionPane.showConfirmDialog(null,
                                                        "Setting: " + data.getSettingId().toString() + " is invalid. max value:" + data.getSettingMaxValue()+ "\nDo you want to adjust this value to max value?.",
                                                        "Invalid setting",
                                                        JOptionPane.YES_NO_OPTION);
            if(answer == JOptionPane.YES_OPTION)
            {
               data.setSettingValue(data.getSettingMaxValue());
            }
        }
    }
    
    private void JOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JOkButtonActionPerformed
        
        if( null != iftSettings && feedbackValues != null)
        {
            for(int i = 0; i < feedbackValues.size();  i++)
            {
                try
                {
                    feedbackValues.get(i).setSettingValue(Double.valueOf(valuesFields[i].getText())); 
                    ValidateNewValue(feedbackValues.get(i));// validating all settings before updating.
                }
                catch(Exception ex)
                {
                    JOptionPane.showMessageDialog(null,
                                                "Error when converting " + valuesFields[i].getText() + ".\nIt seems not to be a double value",
                                                "Convertion error",
                                                JOptionPane.ERROR_MESSAGE);

                }
            }
            
            iftSettings.settingsUpdated(feedbackValues);
        }
        this.dispose();
    }//GEN-LAST:event_JOkButtonActionPerformed

    private void JCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_JCancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JSettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JSettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JSettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JSettingsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JSettingsDialog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JCancelButton;
    private javax.swing.JButton JOkButton;
    private javax.swing.JPanel JSettingsPanel;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables

    public boolean configureDataToDisplay(LinkedList<ISettingFeedback> feedbackValues) {
        
        if( feedbackValues.size() <= 0)
        {
            return false;
        }
        if( valuesFields == null)
        {
            valuesFields = new JTextField[feedbackValues.size()];
        }
        GridLayout singleGridLayout = new GridLayout(0,1);
        JSettingsPanel.setLayout(singleGridLayout );
        for (int i = 0; i < feedbackValues.size(); i++)
        {
            JTextArea description = new JTextArea(feedbackValues.get(i).getSettingDescription() 
                                                    + "\nmin:" + feedbackValues.get(i).getSettingMinValue()
                                                    + " | max: " + feedbackValues.get(i).getSettingMaxValue());
            valuesFields[i] = new JTextField(String.valueOf(feedbackValues.get(i).getSettingValue()));
            JSettingsPanel.add(description);
            JSettingsPanel.add(valuesFields[i]);
        }
        
        return true;
    }

    private ISettingFeedback[] getUpdatedValues(ISettingFeedback[] feedbackValues) {
        //double[] values = new double[valuesFields.length];
        
        for( int i = 0; i < valuesFields.length; i++)
        {
            try
            {
                feedbackValues[i].setSettingValue(Double.valueOf(valuesFields[i].getText()));
            }
            catch(Exception ex)
            {
            }
        }
        
        return feedbackValues;
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cnc.gcode.controller;

import java.awt.Component;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.concurrent.CancellationException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.plaf.basic.BasicComboBoxRenderer;

/**
 *
 * @author patrick
 */
public class JPanelCNCMilling extends javax.swing.JPanel implements IGUIEvent{

    private IEvent GUIEvent=null;
    
    private abstract class PSwingWorker<T, V> extends SwingWorker<T, V>
    {
        public PSwingWorker() {
            super();
            
            //Add percent Update:
            this.addPropertyChangeListener(new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                    if(evt.getPropertyName().equals("progress"))
                    {
                        jPBCNC.setValue((Integer)evt.getNewValue());
                    }
                }
            });
        }

    }
    
    final JFileChooser fc = new JFileChooser();
    JPanelCNCMilling.PSwingWorker cncworker=null;
    boolean cncloadedfile=false;
    boolean cncperview=false;
    
    
    /**
     * Creates new form JPanelCNCMilling
     */
    public JPanelCNCMilling() {
        initComponents();
        
        //set currantdiroctary
        try {
            fc.setCurrentDirectory(new File(Database.FILEDIRECTORY.get()));
        }
        catch(Exception ex){
            //Its ok ;-)
        }
        
        //CNC Milling
        jLCNCCommands.setCellRenderer(new BasicComboBoxRenderer(){

            @Override
            public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                
                if(value instanceof CNCCommand){
                    final CNCCommand message=(CNCCommand)value;
                    if(message.getState()!=CNCCommand.State.NORMAL)
                        setBackground(message.getBColor());
                    else
                        setForeground(message.getFColor());
                }
                
                return this;
            }
            
        });        
        
        
        
    }

    @Override
    public void setGUIEvent(IEvent event)
    {
        GUIEvent=event;
    }

    @Override
    public void updateGUI(boolean serial, boolean isworking)
    {
        jBCNCPerview.setEnabled(!isworking && cncloadedfile);
        jBCNCPositioning.setEnabled(!isworking && cncloadedfile && !cncperview);
        jCBCNCPerview.setEditable(!isworking && cncloadedfile && cncperview);
        jBCNCMilling.setEnabled(!isworking && cncloadedfile && serial);
        jBCNCAbrote.setEnabled(isworking);
        if(!isworking)
            jPBCNC.setValue(0);
    }
    
    private void fireupdateGUI()
    {
        if(GUIEvent==null)
            throw new RuntimeException("GUI EVENT NOT USED!");
        GUIEvent.fired();
    }

    
    public boolean isRunning()
    {
        return cncworker!=null && !cncworker.isDone();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jPPaintable1 = new cnc.gcode.controller.JPPaintable();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCNCloadFile = new javax.swing.JButton();
        jBCNCPerview = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCBCNCPerview = new javax.swing.JComboBox();
        jBCNCPositioning = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jBCNCMilling = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jPBCNC = new javax.swing.JProgressBar();
        jBCNCAbrote = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jLCNCCommands = new javax.swing.JList();

        jSplitPane2.setDividerLocation(500);

        javax.swing.GroupLayout jPPaintable1Layout = new javax.swing.GroupLayout(jPPaintable1);
        jPPaintable1.setLayout(jPPaintable1Layout);
        jPPaintable1Layout.setHorizontalGroup(
            jPPaintable1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );
        jPPaintable1Layout.setVerticalGroup(
            jPPaintable1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 462, Short.MAX_VALUE)
        );

        jSplitPane2.setLeftComponent(jPPaintable1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Steps"));

        jLabel1.setText("1.)");

        jCNCloadFile.setText("Load File");
        jCNCloadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCNCloadFileActionPerformed(evt);
            }
        });

        jBCNCPerview.setText("Preview");
        jBCNCPerview.setEnabled(false);

        jLabel3.setText("2.)");

        jLabel5.setText("Layer:");

        jCBCNCPerview.setEnabled(false);

        jBCNCPositioning.setText("Positioning");
        jBCNCPositioning.setEnabled(false);
        jBCNCPositioning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCNCPositioningActionPerformed(evt);
            }
        });

        jLabel4.setText("3.)");

        jLabel23.setText("3.)");

        jBCNCMilling.setText("Milling");
        jBCNCMilling.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCNCloadFile)
                    .addComponent(jBCNCPerview)
                    .addComponent(jBCNCPositioning)
                    .addComponent(jBCNCMilling))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jCBCNCPerview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCNCloadFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jBCNCPerview)
                    .addComponent(jLabel5)
                    .addComponent(jCBCNCPerview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jBCNCPositioning))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jBCNCMilling)))
        );

        jLabel24.setText("Progress:");

        jBCNCAbrote.setText("Abort");
        jBCNCAbrote.setEnabled(false);
        jBCNCAbrote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCNCAbroteActionPerformed(evt);
            }
        });

        jLCNCCommands.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLCNCCommandsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jLCNCCommands);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPBCNC, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jBCNCAbrote))
                                .addGap(0, 51, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPBCNC, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBCNCAbrote)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane2.setRightComponent(jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 878, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSplitPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 878, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 464, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSplitPane2))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCNCloadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCNCloadFileActionPerformed
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setMultiSelectionEnabled(false);
        if(fc.showOpenDialog(this)!=JFileChooser.APPROVE_OPTION)
            return;
        Database.FILEDIRECTORY.set(fc.getCurrentDirectory().getPath());
        final File f= fc.getSelectedFile();

        if(!f.canRead())
        {
            JOptionPane.showMessageDialog(this, "File cannot be read!");
            return;
        }

        jLCNCCommands.setModel(new DefaultComboBoxModel()); //Clear Listbox

        cncloadedfile=false;
        cncperview=false;

        cncworker = new PSwingWorker<String, CNCCommand>() {
            DefaultListModel<CNCCommand> model=new DefaultListModel<>();

            @Override
            protected String doInBackground() throws Exception {
                CNCCommand.Calchelper c= new CNCCommand.Calchelper();
                String line;
                int warings=0;
                int errors=0;
                long countbytes=0;
                long length= f.length();
                
                if (length==0)
                    length=1;
                
                BufferedReader br= new BufferedReader(new FileReader(f));
                
                while((line = br.readLine() )!=null)
                {
                    countbytes+=line.length()+1;
                    setProgress((int)(100*countbytes/length));

                    CNCCommand command= new CNCCommand(line);

                    CNCCommand.State t=command.calcCommand(c);

                    if(t==CNCCommand.State.WARNING)
                        warings++;
                    if(t==CNCCommand.State.ERROR)
                        errors++;

                    model.addElement(command);
                }


                br.close();

                return "File loaded with "+warings+" Warings and "+errors+" Errors!";
            }

            @Override
            protected void done() {
                String message;

                try {
                    message=get();
                    cncloadedfile=true;
                    fireupdateGUI();
                }
                catch (CancellationException ex){
                    message="Canceled!";
                }
                catch ( Exception ex) {
                    message="Error loading File! ("+ex.getMessage()+")";
                    Logger.getLogger(JPanelCNCMilling.class.getName()).log(Level.SEVERE, null, ex);
                }
                jLCNCCommands.setModel(model);

                JOptionPane.showMessageDialog(JPanelCNCMilling.this, message);

                fireupdateGUI();
            }

        };

        cncworker.execute();

        fireupdateGUI();
    }//GEN-LAST:event_jCNCloadFileActionPerformed

    private void jBCNCPositioningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCNCPositioningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBCNCPositioningActionPerformed

    private void jBCNCAbroteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCNCAbroteActionPerformed

        if(cncworker!=null)
            cncworker.cancel(true);

        fireupdateGUI();
    }//GEN-LAST:event_jBCNCAbroteActionPerformed

    private void jLCNCCommandsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLCNCCommandsMouseClicked
        if(evt.getClickCount()==2)
        {
            int index=jLCNCCommands.locationToIndex(evt.getPoint());
            if(index!=-1)
                JOptionPane.showMessageDialog(this,((CNCCommand)jLCNCCommands.getModel().getElementAt(index)).getInfos());
        }
    }//GEN-LAST:event_jLCNCCommandsMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBCNCAbrote;
    private javax.swing.JButton jBCNCMilling;
    private javax.swing.JButton jBCNCPerview;
    private javax.swing.JButton jBCNCPositioning;
    private javax.swing.JComboBox jCBCNCPerview;
    private javax.swing.JButton jCNCloadFile;
    private javax.swing.JList jLCNCCommands;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jPBCNC;
    private cnc.gcode.controller.JPPaintable jPPaintable1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSplitPane jSplitPane2;
    // End of variables declaration//GEN-END:variables
}
